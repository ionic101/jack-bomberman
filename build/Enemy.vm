function Enemy.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
call Vector2.up 0
pop this 2
push pointer 0
return
function Enemy.display 0
push argument 0
pop pointer 0
push this 0
call Utils.displayCell 1
pop temp 0
push constant 0
return
function Enemy.move 1
push argument 0
pop pointer 0
push this 0
push this 2
call Vector2.add 2
pop local 0
push this 1
push local 0
call Map.getCellByVector 2
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
call Vector2.dispose 1
pop temp 0
push local 0
pop this 0
goto IF_END0
label IF_FALSE0
push local 0
call Vector2.dispose 1
pop temp 0
push pointer 0
call Enemy.changeDirection 1
pop temp 0
push pointer 0
call Enemy.move 1
pop temp 0
label IF_END0
push constant 0
return
function Enemy.changeDirection 6
push argument 0
pop pointer 0
push constant 4
call Array.new 1
pop local 0
push constant 0
pop local 3
call Vector2.up 0
pop local 1
push this 0
push local 1
call Vector2.add 2
pop local 2
push this 1
push local 2
call Map.getCellByVector 2
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 3
push local 0
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 3
push constant 1
add
pop local 3
goto IF_END0
label IF_FALSE0
push local 1
call Vector2.dispose 1
pop temp 0
label IF_END0
push local 2
call Vector2.dispose 1
pop temp 0
call Vector2.down 0
pop local 1
push this 0
push local 1
call Vector2.add 2
pop local 2
push this 1
push local 2
call Map.getCellByVector 2
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 3
push local 0
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 3
push constant 1
add
pop local 3
goto IF_END1
label IF_FALSE1
push local 1
call Vector2.dispose 1
pop temp 0
label IF_END1
push local 2
call Vector2.dispose 1
pop temp 0
call Vector2.left 0
pop local 1
push this 0
push local 1
call Vector2.add 2
pop local 2
push this 1
push local 2
call Map.getCellByVector 2
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 3
push local 0
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 3
push constant 1
add
pop local 3
goto IF_END2
label IF_FALSE2
push local 1
call Vector2.dispose 1
pop temp 0
label IF_END2
push local 2
call Vector2.dispose 1
pop temp 0
call Vector2.right 0
pop local 1
push this 0
push local 1
call Vector2.add 2
pop local 2
push this 1
push local 2
call Map.getCellByVector 2
push constant 0
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 3
push local 0
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 3
push constant 1
add
pop local 3
goto IF_END3
label IF_FALSE3
push local 1
call Vector2.dispose 1
pop temp 0
label IF_END3
push local 2
call Vector2.dispose 1
pop temp 0
push local 3
push constant 1
sub
call Random.randint 1
pop local 4
push local 4
push constant 0
gt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 4
push local 0
add
pop pointer 1
push that 0
pop this 2
label IF_FALSE4
push constant 0
pop local 5
label WHILE_EXP0
push local 5
push local 3
lt
not
if-goto WHILE_END0
push local 5
push local 4
eq
not
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 5
push local 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call Vector2.dispose 1
pop temp 0
label IF_FALSE5
push local 5
push constant 1
add
pop local 5
goto WHILE_EXP0
label WHILE_END0
push local 0
call Array.dispose 1
pop temp 0
push constant 0
return
