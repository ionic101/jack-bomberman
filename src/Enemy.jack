class Enemy {
    field Vector2 coord;
    field Map map;

    field Vector2 moveDirection;
    static Vector2 directions;

    constructor Enemy new(Vector2 spawnCoord, Map _map) {
        let coord = spawnCoord;
        let map = _map;
        let moveDirection = Vector2.upReadOnly();
        return this;
    }

    method void display() {
        do Utils.displayCell(coord);
        return;
    }

    method void move() {
        var Vector2 newCoord;
        
        let newCoord = coord.add(moveDirection);
        if (map.getCellByVector(newCoord) = 0) {
            do coord.dispose();
            let coord = newCoord;
        }
        else {
            do newCoord.dispose();
            do changeDirection();
        }
        return;
    }

    method void changeDirection() {
        var Vector2 curCoord;

        let curCoord = coord.add(Vector2.upReadOnly());
        if (map.getCellByVector(curCoord) = 0) {
            let moveDirection = Vector2.upReadOnly();
            do curCoord.dispose();
            return;
        }
        
        let curCoord = coord.add(Vector2.rightReadOnly());
        if (map.getCellByVector(curCoord) = 0) {
            let moveDirection = Vector2.rightReadOnly();
            do curCoord.dispose();
            return;
        }

        let curCoord = coord.add(Vector2.downReadOnly());
        if (map.getCellByVector(curCoord) = 0) {
            let moveDirection = Vector2.downReadOnly();
            do curCoord.dispose();
            return;
        }

        let curCoord = coord.add(Vector2.leftReadOnly());
        if (map.getCellByVector(curCoord) = 0) {
            let moveDirection = Vector2.leftReadOnly();
            do curCoord.dispose();
            return;
        }

        do curCoord.dispose();
        return;
    }
}
