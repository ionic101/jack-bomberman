class Enemy {
    field Vector2 coord;
    field Map map;

    field Vector2 moveDirection;

    constructor Enemy new(Vector2 spawnCoord, Map _map) {
        let coord = spawnCoord;
        let map = _map;
        let moveDirection = Vector2.up();
        return this;
    }

    method void display() {
        do Utils.displayCell(coord);
        return;
    }

    method void move() {
        var Vector2 newCoord;
        do changeDirection();
        let newCoord = coord.add(moveDirection);
        if (map.getCellByVector(newCoord) = 0) {
            do coord.dispose();
            let coord = newCoord;
        }
        else {
            do newCoord.dispose();
        }
        return;
    }

    method void changeDirection() {
        var Array directions;
        var Vector2 curDirection, curCoord;
        var int index, randIndex, i;
        let directions = Array.new(4);
        let index = 0;

        let curDirection = Vector2.up();
        let curCoord = coord.add(curDirection);
        if (map.getCellByVector(curCoord) = 0) {
            let directions[index] = curDirection;
            let index = index + 1;
        }
        else {
            do curDirection.dispose();
        }
        do curCoord.dispose();

        let curDirection = Vector2.down();
        let curCoord = coord.add(curDirection);
        if (map.getCellByVector(curCoord) = 0) {
            let directions[index] = curDirection;
            let index = index + 1;
        }
        else {
            do curDirection.dispose();
        }
        do curCoord.dispose();

        let curDirection = Vector2.left();
        let curCoord = coord.add(curDirection);
        if (map.getCellByVector(curCoord) = 0) {
            let directions[index] = curDirection;
            let index = index + 1;
        }
        else {
            do curDirection.dispose();
        }
        do curCoord.dispose();

        let curDirection = Vector2.right();
        let curCoord = coord.add(curDirection);
        if (map.getCellByVector(curCoord) = 0) {
            let directions[index] = curDirection;
            let index = index + 1;
        }
        else {
            do curDirection.dispose();
        }
        do curCoord.dispose();

        let randIndex = Random.randint(index - 1);
        if (randIndex > 0) {
            let moveDirection = directions[randIndex];
        }

        let i = 0;
        while (i < index) {
            if (~(i = randIndex)) {
                let curDirection = directions[i];
                do curDirection.dispose();
            }
            let i = i + 1;
        }
        do directions.dispose();
        return;
    }
}
